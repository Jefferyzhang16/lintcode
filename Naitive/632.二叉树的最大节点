#include <stdio.h>

class TreeNode {
public:
    TreeNode(int arr[], int len){
        initNode(this, arr, 0, len);
    }
    TreeNode(TreeNode *l, TreeNode *r, int v){
        lnode = l;
        rnode = r;
        val = v;
    }
    TreeNode * initNode(TreeNode *node,int ar[], int i, int nlen){
        if(i > nlen-1){
        	node = NULL;
            return NULL;
        }
        TreeNode *l = NULL;
		TreeNode *r = NULL;;
        l = initNode(l, ar, 2 * i + 1, nlen);
        r = initNode(r, ar, 2 * i + 2, nlen);
        if(node == NULL){
        	return (new TreeNode(l, r, ar[i])); 	
        }
       	else {
	        lnode = l;
	        rnode = r;
	        val = ar[i];	    	   	
       	}
    }
    void showNode(){
    	showNode(this);
    }
    void showNode(TreeNode *node){
    	if(!node){
	    	return;
	    }
	    showNode(node->lnode);
	    showNode(node->rnode);
	    printf("%d",node->val);
    }

    
public:
    TreeNode *lnode;
    TreeNode *rnode;
    int val;
};



TreeNode* max(TreeNode* l, TreeNode* r){
	if(l == NULL){
		return r;
	}
	if(r == NULL){
		return l;
	}
	if(l->val > r->val){
		return l;
	}else{
		return r;
	}
	
}
TreeNode* maxNode(TreeNode* root) {
	if(root == NULL){
		return root;
	}
    TreeNode* left = maxNode(root->lnode);
    TreeNode* right = maxNode(root->rnode);
    
    return max(root, max(left, right));
}
int main(){
	int a[] = {
		1,2,9,4,5,6,2,4,3
	};
	int len = sizeof(a) / sizeof(int);
	TreeNode *root = new TreeNode(a, len);
	//root -> showNode();
	
	printf("%d\n",maxNode(root)->val);
}